(require 'ox-publish)

;; inline image size
(setq org-image-actual-width 200)
(setq org-html-validation-link nil)
(defun my-org-html-postamble (plist)
  (concat "<hr>" "<p>Author: <a href='https://www.astro.umd.edu/~chongchong/'>Chong-Chong He</a></p>"
	  (format "<p>Last updated: %s</p>" (format-time-string "%Y-%m-%d"))
	  ))
(setq org-html-postamble 'my-org-html-postamble)

;; sitemap function
(defun my-org-publish-org-sitemap (title list)
  "Sitemap generation function."
  (concat (format "#+TITLE: %s\n" title)
          (org-list-to-subtree list)
          "\n\n"
          ;; (@-load-file-contents (expand-file-name "~/.emacs.d/aboutme.org"))
          )
  )

(setq org-publish-project-alist
      '(("body"
	 ;; generic
         :base-directory "org"
         :base-extension "org"
	 :exclude "README.org"
         :publishing-directory "public"
         :recursive nil
	 :language en
	 :with-latex t
	 ;; html
	 ;; :html-head "<link rel='stylesheet' href='css/org.css' type='text/css' /> <link rel='stylesheet' href='css/custom.css' type='text/css' /> <link rel='icon' href='img/favicon.ico'>"
	 ;; :html-postamble my-website-html-postamble
         :publishing-function org-html-publish-to-html
	 ;; :html-doctype "html5"
         ;; :html-html5-fancy t
	 ;; :html-head-extra "<link rel="stylesheet" href="https://gongzhitaao.org/orgcss/org.css" type="text/css" />"
	 ;; sitemap
	 :auto-sitemap t
         :sitemap-filename "index.org"
         :sitemap-title "Home"
         :sitemap-function my-org-publish-org-sitemap
	 :html-home/up-format "<div> <a accesskey='h' href='index.html'> UP </a> | <a accesskey='H' href='index.html'> HOME </a> </div>"
	 )
	("css"
         :base-directory "style/"
         :base-extension "css\\|js\\|setup"
         :publishing-directory "public/css"
         :publishing-function org-publish-attachment
         :recursive t)
	("attach"
         :base-directory "img/"
         :base-extension "png\\|jpg\\|ico\\|pdf"
         :publishing-directory "public/img"
         :publishing-function org-publish-attachment
         :recursive t)
	("all" :components ("body" "css" "attach"))))
