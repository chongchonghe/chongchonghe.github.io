[{"authors":["admin"],"categories":null,"content":"\nI am a PhD student at UMD working with Prof. Massimo Ricotti to study the formation and evolution of compact star clusters. I use a state-of-art radiation-magnetohydrodynamics code RAMSES-RT to simulate star formation from molecular clouds in the early universe. In particular, I am looking to understand the role of the first dense star clusters in the production of supermassive black hole seeds and in the reionization of the universe.\n","date":1560455552,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1560455552,"objectID":"598b63dd58b43bce02403646f240cd3c","permalink":"https://chongchonghe.github.io/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"author","summary":"I am a PhD student at UMD working with Prof. Massimo Ricotti to study the formation and evolution of compact star clusters. I use a state-of-art radiation-magnetohydrodynamics code RAMSES-RT to simulate star formation from molecular clouds in the early universe. In particular, I am looking to understand the role of the first dense star clusters in the production of supermassive black hole seeds and in the reionization of the universe.","tags":null,"title":"Chong-Chong He","type":"author"},{"authors":[],"categories":[],"content":" Compare \u0026ldquo;viridis\u0026rdquo; and \u0026ldquo;jet\u0026rdquo; with \u0026ldquo;gray\u0026rdquo; colormap Here I create an artificial Gaussian density profile, centering at the origin and having a $\\sigma$ of 0.5, and show it with \u0026ldquo;gray\u0026rdquo; colormap.\nfrom __future__ import division, print_function import numpy as np import matplotlib.pyplot as plt # construct a 2D Gaussian x = np.linspace(-3, 3, 200) y = x X, Y = np.meshgrid(x, y) d = np.sqrt(X*X + Y*Y) sigma, mu = .5, 0.0 gaus = np.exp(-( (d-mu)**2 / ( 2.0 * sigma**2 ) ) ) extent = [-3, 3, -3, 3] plt.imshow(gaus, cmap='gray', extent=extent) plt.colorbar();  Looks nice, ah? But, black and white are boring, so let us make it colorful. Here is what it looks like with the current default colormap \u0026ldquo;viridis\u0026rdquo;:\nplt.imshow(gaus, cmap='viridis', extent=extent) plt.title(\u0026quot;Viridis\u0026quot;) plt.colorbar();  Looks awsome! We see a bright dot at the center and gradual change to heavier colors toward the edge. Now, let us see what it looks like when plotted with \u0026ldquo;jet\u0026rdquo;, the default colormap in older versions of matplotlib:\nplt.imshow(gaus, cmap='jet', extent=extent) plt.title(\u0026quot;Jet\u0026quot;) plt.colorbar();  It is a disaster! There are artifactual hierarchical layers showing as abrupt changes in color that are not shown in data.\nDefine your own color map Here I create another artificial data: a ring with a radius of 1.\nx = np.linspace(-2, 2, 1000) y = x X, Y = np.meshgrid(x, y) r = np.sqrt(X**2 + Y**2) sigma = 0.5 z = np.exp(-( (r-1)**2 / ( 2.0 * sigma**2 ) ) ) extent = [-2, 2, -2, 2] plt.imshow(z, cmap='viridis', extent=extent) plt.colorbar();  Assume we want to focus only on the ring (i.e., say, $z\u0026gt;0.9$) and do not care about other areas, then, we want to redefine the colormap so that all bright colors concentrates on $z\u0026gt;0.9$.\n# Define my own colormap from matplotlib.colors import ListedColormap base = np.linspace(0, 1, 256) cmap_viridis = plt.cm.get_cmap('viridis') colors = [cmap_viridis(i) for i in base] viridis_copy = ListedColormap(colors) # Edit the colormap and make it more concentrated at higher values. # Rescale the data-to-color function with a polynomial function power = 3 base_mod = np.linspace(0, 1, 256)**power colors_mod = [cmap_viridis(i) for i in base_mod] viridis_mod = ListedColormap(colors_mod) # Show the same image with the edited viridis cmap plt.figure() plt.imshow(z, cmap=viridis_mod) plt.title(\u0026quot;Edited Viridis\u0026quot;) plt.colorbar();  ","date":1557033812,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1560455552,"objectID":"4c7b69d5544ea56698873a014f60b117","permalink":"https://chongchonghe.github.io/post/colormap/","publishdate":"2019-05-05T01:23:32-04:00","relpermalink":"/post/colormap/","section":"post","summary":"Compare \u0026ldquo;viridis\u0026rdquo; and \u0026ldquo;jet\u0026rdquo; with \u0026ldquo;gray\u0026rdquo; colormap Here I create an artificial Gaussian density profile, centering at the origin and having a $\\sigma$ of 0.5, and show it with \u0026ldquo;gray\u0026rdquo; colormap.\nfrom __future__ import division, print_function import numpy as np import matplotlib.pyplot as plt # construct a 2D Gaussian x = np.linspace(-3, 3, 200) y = x X, Y = np.meshgrid(x, y) d = np.sqrt(X*X + Y*Y) sigma, mu = .","tags":[],"title":"Why you should never use 'jet' colormap","type":"post"},{"authors":["**C.-C. He**","M. Ricotti","S. Geen"],"categories":null,"content":"","date":1554091200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555784663,"objectID":"318b8905151f20f43add4a326d10cdb0","permalink":"https://chongchonghe.github.io/publication/he-2019/","publishdate":"2019-04-01T00:00:00-04:00","relpermalink":"/publication/he-2019/","section":"publication","summary":"We present a large set of radiation-magneto-hydrodynamic simulations of star formation in self-gravitating, turbulent molecular clouds, modeling the formation of individual massive stars, including their UV radiation feedback. We consider a grid of simulations varying the cloud masses between $m\\_{gas}=10^3$ M$\\_\\odot$ to $3 \\times 10^5$ M$\\_\\odot$, and resolving scales between 200 AU to 2000 AU. We consider molecular clouds with gas mean number densities typical of those observed in the local universe ($\\overline n\\_{gas} \\sim 1.8\\times 10^2$ cm$^{-3}$) and denser molecular clouds ($\\overline n\\_{gas} \\sim 1.8 \\times 10^3$ cm$^{-3}$ and $1.8 \\times 10^4$ cm$^{-3}$) expected to exist, according to cosmological simulations, in high-redshift galaxies. We also partially explore varying the gas metallicity. \u0026emsp; In this paper, the first of a series, we focus on the analysis of the initial mass function (IMF), the star formation rate (SFR), and the total star formation efficiency (TSFE) in molecular clouds . These are the main results: i) We find that the observed Salpeter power-law slope and normalisation of the stellar IMF at the high-mass end can be reproduced if we assume that each star-forming gas clump (sink particle) fragments into stars producing on average a maximum stellar mass about $40\\%$ of the mass of the sink particle, while the remaining $60\\%$ is distributed into smaller mass stars. This empirical prescription, and an IMF reproducing a Chabrier IMF, can be obtained assuming that the sinks fragment according to a power-law mass function flatter than Salpeter, with log-slope $\\Gamma\\sim 0.8$. This result is in agreement with the observed mass function of dense cores in some molecular clouds. ii) The star formation law that best describes our set of simulation is $d\\rho\\_\\star/dt \\propto \\rho\\_{gas}^{1.5}$ if $\\overline{n}\\_{gas}\\n\\_{cri}$. The duration of the star formation episode of roughly $6$ sound crossing times of the cloud radius (with $c\\_s=10$ km/s). iii) For gas at solar metallicity the TSFE in the cloud is $f\\_\\star=2\\% (m\\_{gas}/10^4 M\\_\\odot)^{0.4}(1+\\overline n\\_{gas}/n\\_{cri})^{0.91}$, also in agreement with (ii). At metallicity $Z","tags":["Astrophysics - Astrophysics of Galaxies"],"title":"Simulating Star Clusters Across Cosmic Time: I. Initial Mass Function, Star Formation Rates and Efficiencies","type":"publication"},{"authors":["**C.-C. He**","L. Keek"],"categories":null,"content":"   $\\alpha$ Emission from neutron stars and accretion disks in low-mass X-ray binaries (LMXBs) is not isotropic. Previous studies made predictions of the anisotropy factors for burst flux, assuming a geometrically flat disk. In this case, the ratio of the reflected and direct burst flux ($\\xi_{r}^{-1}/\\xi_{d}^{-1}$, or the reflection fraction) peaks at 0.5. Recently (2014), however, detailed observations showed that the reflection fraction could reach to ~6 at the tail of a superburst (top right), which is much higher than what a system with a flat disk can account for.\nWe create numerical models to calculate the anisotropy factors of radiation for different disk shapes, including a disk with a thick bulge in the inner region (top left). We present the anisotropy factors of the direct and reflected burst flux separately, as well as the anisotropy of the persistent flux (bottom right). Reflection fractions substantially larger than unity are produced in case the inner accretion disk steeply increases in height, such that part of the star is blocked from view (bottom left). Such a geometry could possibly be induced by the X-ray burst if X-ray heating causes the inner disk to puff up.\n","date":1456808400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1560455552,"objectID":"63f9e146c55f260f86b77844403c14c4","permalink":"https://chongchonghe.github.io/publication/he-2016/","publishdate":"2016-03-01T00:00:00-05:00","relpermalink":"/publication/he-2016/","section":"publication","summary":"$\\alpha$ Emission from neutron stars and accretion disks in low-mass X-ray binaries (LMXBs) is not isotropic. Previous studies made predictions of the anisotropy factors for burst flux, assuming a geometrically flat disk. In this case, the ratio of the reflected and direct burst flux ($\\xi_{r}^{-1}/\\xi_{d}^{-1}$, or the reflection fraction) peaks at 0.5. Recently (2014), however, detailed observations showed that the reflection fraction could reach to ~6 at the tail of a superburst (top right), which is much higher than what a system with a flat disk can account for.","tags":["accretion","accretion disks","stars: neutron","X-rays: binaries","X-rays: bursts"],"title":"Anisotropy of X-Ray Bursts from Neutron Stars with Concave Accretion Disks","type":"publication"},{"authors":null,"categories":null,"content":"this is my CV\nName: CC He\nPub\n- He: 2016 - He: 2019  ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1552972074,"objectID":"7e6115c4d209379befeb3847e8c4905b","permalink":"https://chongchonghe.github.io/cv/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/cv/","section":"","summary":"this is my CV\nName: CC He\nPub\n- He: 2016 - He: 2019  ","tags":null,"title":"CV","type":"page"}]